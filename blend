import bpy


def create(resU, resV):
    
    mesh = bpy.data.meshes.new("scanned mesh")
    obj = bpy.data.objects.new(mesh.name, mesh)
    col = bpy.data.collections["Collection"]
    col.objects.link(obj)
    bpy.context.view_layer.objects.active = obj

    verts = [(2.10,0.00,-2.59),(1.40,0.62,-2.70),(1.54,1.71,-2.55),(0.88,2.71,-2.44),(0.02,-0.22,-3.04),(-0.97,1.67,-2.62),(-2.57,1.86,-2.38),(-2.14,0.46,-2.57),(-2.74,-0.58,-2.45),(-3.70,-2.69,-2.10),(-2.20,-3.82,-2.13),(-0.40,-3.82,-2.24),(1.20,-3.69,-2.24),(2.02,-2.24,-2.41),(2.19,-0.98,-2.53),(5.06,0.00,-0.67),(3.04,1.35,-1.01),(2.75,3.05,-0.86),(1.73,5.33,-0.56),(-0.52,4.92,-0.69),(-2.37,4.10,-0.74),(-4.01,2.92,-0.69),(-5.31,1.13,-0.60),(-2.14,-0.46,-1.24),(-4.18,-3.04,-0.65),(-2.54,-4.41,-0.67),(-0.44,-4.22,-0.83),(0.78,-2.41,-1.17),(2.44,-2.71,-0.95),(3.86,-1.72,-0.84),(4.61,0.00,0.57),(4.30,1.91,0.59),(3.34,3.71,0.65),(1.74,5.35,0.77),(-0.50,4.72,0.60),(-2.76,4.78,0.75),(-4.16,3.02,0.68),(-5.21,1.11,0.71),(-3.75,-0.80,0.42),(-4.61,-3.35,0.79),(-2.71,-4.69,0.73),(-0.54,-5.13,0.68),(1.45,-4.45,0.59),(3.19,-3.54,0.60),(4.03,-1.80,0.54),(4.44,0.00,1.87),(4.04,1.80,1.87),(3.12,3.47,1.92),(1.64,5.04,2.04),(-0.30,2.82,1.56),(-2.21,3.83,1.87),(-4.33,3.14,2.05),(-3.38,0.72,1.68),(-3.42,-0.73,1.69),(-4.28,-3.11,2.04),(-2.57,-4.45,2.01),(-0.60,-5.68,2.12),(1.41,-4.34,1.90),(2.90,-3.22,1.85),(4.00,-1.78,1.86),(4.28,0.00,3.18),(2.87,1.28,2.95),(1.48,1.64,2.77),(-1.75,-5.39,1.22),(0.44,-4.15,1.51),(-0.27,0.47,2.44),(0.64,-0.47,2.18),(-2.73,0.58,2.88),(-3.84,-0.82,3.11),(-3.48,-2.52,3.18),(-2.22,-3.85,3.21),(-0.26,-2.45,2.82),(1.15,-3.53,3.06),(2.36,-2.62,3.03),(4.06,-1.81,3.21),(2.12,0.00,4.08),(3.39,1.51,4.40),(1.64,1.82,4.15),(0.42,1.30,3.94),(-0.32,3.03,4.27),(-2.07,3.58,4.48),(-3.06,2.22,4.41),(-3.63,0.77,4.40),(-3.15,-0.67,4.30),(-2.98,-2.17,4.39),(-1.87,-3.24,4.40),(-0.39,-3.67,4.39),(1.28,-3.93,4.48),(2.27,-2.52,4.33),(3.21,-1.43,4.36),(-8.16,0.00,3.39),(-3.98,-1.77,4.14),(-4.88,-5.42,3.56),(-1.17,-3.60,4.25),(0.06,-0.54,4.89),(0.66,-1.14,4.74),(3.69,-2.68,4.10),(3.52,-0.75,4.29),(4.43,0.94,4.11),(6.07,4.41,3.52),(5.82,10.07,2.71),(1.15,10.98,2.83),(-4.32,13.29,2.25),(-8.88,9.86,2.39),(-11.75,5.235,2.475),(-213.12,0.0012,-35.62),(-257.22,-114.52,-49.09),(-316.96,-352.02,-86.91),(-3.30,-10.16,4.236),(2.326,-22.12,1.962),(87.38,-151.35,-28.07),(207.23,-150.56,-44.09),(319.19,-67.84,-57.90),(594.80,126.43,-113.37),(169.80,123.36,-34.98),(115.43,199.93,-39.11),(56.70,539.43,-100.44),(-12.80,39.39,-1.82),(-307.18,341.16,-84.04),(-514.06,228.87,-104.44),(-691.31,0.0031,-128.42),(-257.22,-114.52,-47.76),(-218.35,-242.50,-56.57),(-195.78,-602.56,-117.05),(22.285,-211.96,-34.29),(115.43,-199.93,-37.78),(615.12,-446.91,-142.00),(225.82,-48.00,-37.78),(449.04,95.45,-82.70),(534.93,388.65,-122.49),(125.79,217.88,-41.86),(24.13,229.60,-37.78),(-260.90,802.96,-158.53),(-165.39,183.68,-40.99),(-555.52,247.33,-112.04),(-562.70,0.0070,-101.77),(-478.22,-212.92,-94.05),(-338.44,-375.88,-90.57),(-156.30,-481.04,-90.57),(24.13,-229.60,-36.45),(117.37,-203.30,-37.21),(180.77,-131.34,-34.99),(619.72,-131.73,-115.72),(280.95,59.72,-47.54),(472.90,343.58,-106.07),(422.14,731.17,-157.20),(79.480,756.16,-140.67),(-64.86,199.61,-32.31),(-406.89,451.90,-110.70),(-200.89,89.449,-34.29),(-227.10,0.0010,-34.37),(-210.90,-93.90,-35.11),(-228.64,-253.93,-56.93),(-72.54,-223.26,-35.88),(56.70,-539.43,-96.44),(271.20,-469.73,-96.44),(512.56,-372.40,-114.38),(208.47,-44.31,-31.62),(676.20,143.73,-125.75),(183.73,133.48,-34.37),(281.35,487.32,-100.44),(63.564,604.76,-109.37),(-180.63,555.93,-104.73),(-391.13,434.40,-104.73),(-273.35,121.70,-48.57),(-209.88,0.0088,-29.65),(-238.33,-106.11,-39.69),(-168.34,-186.96,-37.86),(-75.06,-231.00,-36.15),(17.58,-167.23,-21.43),(330.60,-572.62,-118.49),(186.77,-135.70,-33.78),(151.02,-32.10,-18.73),(646.76,137.47,-118.49),(186.77,135.70,-33.78),(84.08,145.63,-21.43),(24.13,229.60,-33.78),(-71.34,219.56,-33.78),(-184.75,205.19,-42.68),(-200.89,89.449,-31.62),(-724.21,0.0021,-129.56),(-210.90,-93.90,-32.45),(-307.18,-341.16,-77.37),(-66.89,-205.87,-29.61),(49.51,-471.09,-80.25),(132.89,-230.17,-39.32),(207.23,-150.56,-37.42),(676.20,-143.73,-123.08),(435.58,92.59,-74.66),(120.63,87.64,-16.35),(119.38,206.77,-34.00),(56.70,539.43,-93.77),(-75.06,231.00,-34.81),(-391.13,434.40,-102.07),(-462.06,205.72,-86.57),(-473.69,0.0069,-78.91),(-210.90,-93.90,-31.11),(-144.84,-160.86,-28.28),(-79.16,-243.62,-36.09),(21.61,-205.59,-26.36),(125.79,-217.88,-35.19),(615.12,-446.91,-135.34),(225.82,-48.00,-31.11),(708.39,150.57,-128.23),(491.96,357.43,-105.37),(125.79,217.88,-35.19),(34.11,324.53,-49.90),(-195.78,602.56,-110.38),(-154.48,171.56,-31.11),(-242.80,108.10,-37.98),(-223.45,0.0045,-28.32),(-257.22,-114.52,-39.76),(-338.44,-375.88,-83.90),(-45.04,-138.63,-13.03),(66.23,-630.09,-109.05),(111.72,-193.51,-28.32),(207.23,-150.56,-34.76),(359.50,-76.41,-56.68),(743.71,158.08,-134.00),(175.12,127.23,-26.94),(125.79,217.88,-33.86),(75.70,720.24,-126.89),(-71.34,219.56,-29.78),(-338.44,375.88,-83.90),(-661.60,294.56,-126.89)]
    edges = []
    faces = []
    
    for j in range(1, resV):
        for i in range(1, resU):
            edges.append((j * resU + i, j * resU + i - 1))
            edges.append(((j - 1) * resU + i, (j - 1) * resU + i - 1))
            edges.append((j * resU + i, (j - 1) * resU + i - 1))
            edges.append(((j - 1) * resU + i, j * resU + i - 1))
    mesh.from_pydata(verts, edges, faces)
    
create(15, 15)
